%YAML 1.2
# vim:ts=2:sw=2:sts=2:et:
---

default: # Default module, will be used if no module is supplied on command line
  dep: [secrets, root, remote-access, graphical, systemd-units, tub, terminal]
  snippets: # Repeating shell commands
    git-pre: &git-pre |-
      git clone "$url" tmp
      cd tmp
      # assuming latest tag is latest release
      git checkout $(git rev-list --tags --max-count=1)
    git-post: &git-post |-
      cd ..
      rm -rf tmp
    apt-get-install: &agi |-
      sudo apt-get install -qy $pkg
    apt-get-download: &agd |-
      apt-get download -qy $pkg
  cmd: |-
    [ -e f ] && rm f
    sudo apt-get install -qy ./*.deb
    rm ./*.deb
    apt-mark showmanual > current.lst
    diff current.lst .config/install/aptmanual.lst > apt.diff || true
    rm current.lst
    echo "TODO:"
    echo "View ~/apt.diff to find programs which weren't installed"
    echo reboot

base: # Basic tools used for installing
  cmd:
    - command -v wget && exit
    - pkg='wget curl zip'
    - *agi

terminal: # Terminal applications
  cmd:
    - command -v tmux && exit
    - pkg='tmux neovim zsh docker.io git ncdu asciinema inotify-tools'
    - *agd
    - sudo usermod -aG docker $USER
    - |-
      sudo chsh -s /usr/bin/zsh
      sudo chsh -s /usr/bin/zsh $USER


secrets:
  cmd: |-
    [ -d ~/.config/secrets ] && exit
    export GIT_DIR=$HOME/.config/secrets GIT_WORK_TREE=$HOME
    git clone --bare https://aljoschua${GITHUB_PAT}@github.com/aljoschua/secrets $GIT_DIR
    git checkout @ -- $GIT_DIR
    git stash
    git checkout

root: # Installs root dotfiles, secrets and various other things
  dep: [base]
  cmd: |-
    sudo su -c 'set -e; cd
    [ -d .config/dotfiles ] && exit
    for repo in .config/{dotfiles,secrets}; do
      export GIT_DIR=$HOME/$repo GIT_WORK_TREE=/
      eval git clone --bare -b root ~$SUDO_USER/$repo $GIT_DIR
      git checkout @ -- $GIT_DIR
      git -c user.name=a -c user.email=a stash
    done
    eval ln -s ~$SUDO_USER ~/.portal
    git checkout
    for key in download.spotify.com/debian/pubkey_0D811D58.gpg \
        mega.nz/keys/MEGA_signing.key \
        dl.google.com/linux/linux_signing_key.pub; do
      wget -qO- $key | apt-key add -
    done
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 5E3C45D7B312C643
    apt-get update
    systemctl disable cups.service || true
    '

remote-access: {cmd: [pkg=openssh-server, *agd]}

graphical:
  dep: [root, wm, libinput-gestures, dunst, chrome, bitwarden, rclone]
  cmd:
    - command -v x11vnc && exit
    - pkg='x11vnc xclip remmina remmina-plugin-vnc kdeconnect gparted ssh-askpass-gnome screenkey signal-desktop'
    - pkg+=' google-chrome-stable spotify-client autorandr'
    - *agd
    - |-
      sudo usermod -aG video $USER # Allow usage of video devices
      sudo usermod -aG plugdev $USER # Allow mounting

wm: {cmd: [pkg='i3 dmenu wmctrl sxhkd zenity xdotool xcompmgr xkbset', *agd]}

libinput-gestures:
  cmd:
    - command -v libinput-gestures-setup && exit
    - pkg='xdotool wmctrl libinput-tools zenity'
    - *agd
    - url=hub:bulletmark/libinput-gestures
    - *git-pre
    - sudo make install
    - *git-post
    - |-
      sudo usermod -aG input $USER
      libinput-gestures-setup autostart

dunst:
  cmd:
    - command -v dunst && exit
    - pkg='dbus libxinerama-dev libxrandr-dev libxss-dev libglib2.0-dev libpango1.0-dev libgtk-3-dev libnotify-dev'
    - *agi
    - url=hub:dunst-project/dunst
    - *git-pre
    - make WAYLAND=0
    - sudo make WAYLAND=0 install
    - *git-post

bitwarden:
  dep: [base]
  cmd: |-
    command -v bitwarden && exit
    wget -O ~/.local/bin/bitwarden 'https://vault.bitwarden.com/download/?app=desktop&platform=linux'
    wget -O bw.zip 'https://vault.bitwarden.com/download/?app=cli&platform=linux'
    unzip -d ~/.local/bin bw.zip
    chmod +x ~/.local/bin/bw ~/.local/bin/bitwarden
    rm bw.zip

rclone:
  dep: [base]
  cmd: |-
    command -v rclone && exit
    wget -O rclone.deb downloads.rclone.org/rclone-current-linux-amd64.deb
    sudo apt-get install -qy ./rclone.deb
    rm rclone.deb
## End graphical deps

tub: 
  dep: [tq, base]
  cmd:
    command -v openconnect && exit
    - pkg='krb5-user openconnect'
    - *agd

tq:
  cmd: |-
    command -v tq && exit
    sudo pip3 install https://github.com/plainas/tq/zipball/stable

systemd-units:
  cmd: systemctl --user daemon-reload
dconf: {cmd: dconf load / < .config/dconf/settings.dconf}
## End default deps

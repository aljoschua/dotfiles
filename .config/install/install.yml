%YAML 1.2
# vim:ts=2:sw=2:sts=2:et:
---
default: # Default module, will be used if no module is supplied on command line
  dep: [secrets, root, remote-access, graphical, systemd-units, tub, terminal]
  snippets: # Repeating shell commands
    git-pre: &git-pre |-
      git clone "$url" tmp
      cd tmp
      # assuming latest tag is latest release
      git checkout $(git rev-list --tags --max-count=1)
    git-post: &git-post |-
      cd ..
      rm -rf tmp
    apt-get-install: &agi |-
      sudo apt-get install -qy $pkg
  cmd: |-
    [ -e f ] && rm f
    apt-mark showmanual > current.lst
    diff current.lst .config/install/aptmanual.lst > apt.diff || true
    rm current.lst
    echo "TODO:"
    echo "View ~/apt.diff to find programs which weren't installed"
    echo reboot
base: # Basic tools used for installing
  cmd:
    - pkg='wget curl zip'
    - *agi
terminal: # Terminal applications
  cmd:
    - pkg='tmux neovim zsh docker.io git ncdu asciinema inotify-tools'
    - *agi
    - |-
      sudo chsh -s /usr/bin/zsh
      sudo chsh -s /usr/bin/zsh $USER
      vim -u NONE \
        -c "helptags .local/share/nvim/site/pack/tpope/start/vim-fugitive/doc" \
        -c "helptags .local/share/nvim/site/pack/syntastic/start/syntastic/doc" \
        -c q

secrets:
  cmd: |-
    git clone --bare https://aljoschua${GITHUB_PAT}@github.com/aljoschua/secrets .config/secrets
    dot() { git --git-dir=$HOME/.config/secrets --work-tree=$HOME "$@"; }
    dot co @ -- .config/secrets
    dot stash
    dot co
root: # Installs root dotfiles, secrets and various other things
  dep: [base]
  cmd: |-
    sudo su -c "set -e; cd
    gd=.config/dotfiles
    git clone --bare -b root ~$USER/\$gd \$gd
    git --git-dir=\$HOME/\$gd --work-tree=/ checkout @ -- /root/\$gd
    git --git-dir=\$HOME/\$gd --work-tree=/ -c user.name=a -c user.email=a stash
    ln -s ~$USER ~/.portal
    gd=.config/secrets
    git clone --bare -b root ~$USER/\$gd \$gd
    git --git-dir=\$HOME/\$gd --work-tree=/ co @ -- /root/\$gd
    git --git-dir=\$HOME/\$gd --work-tree=/ stash
    git --git-dir=\$HOME/\$gd --work-tree=/ co
    wget -qO- download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add -
    wget -qO- mega.nz/keys/MEGA_signing.key | sudo apt-key add -
    wget -qO- dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    apt-get update
    systemctl disable cups || true
    "
remote-access: {cmd: [pkg=openssh-server, *agi]}
graphical:
  dep: [wm, libinput-gestures, spotify, dunst, mega, chrome, bitwarden, dropbox]
  cmd:
    - pkg='x11vnc xclip remmina remmina-plugin-vnc kdeconnect gparted ssh-askpass-gnome screenkey'
    - *agi
    - |-
      sudo usermod -aG video $USER # Allow usage of video devices
      sudo usermod -aG plugdev $USER # Allow mounting
wm: {cmd: [pkg='i3 dmenu wmctrl sxhkd zenity xdotool xcompmgr xkbset', *agi]}
libinput-gestures:
  cmd:
    - pkg='xdotool wmctrl libinput-tools zenity'
    - *agi
    - url=hub:bulletmark/libinput-gestures
    - *git-pre
    - sudo make install
    - *git-post
    - |-
      sudo usermod -aG input $USER
      sudo ln -sf "${XDG_CONFIG_HOME:-$HOME/.config}/libinput-gestures/running.conf" "/etc/libinput-gestures.conf"
      libinput-gestures-setup autostart
spotify:
  dep: [root]
  cmd: [pkg='spotify-client', *agi]
dunst:
  cmd:
    - pkg='dbus libxinerama-dev libxrandr-dev libxss-dev libglib2.0-dev libpango1.0-dev libgtk-3-dev libnotify-dev'
    - *agi
    - url=hub:dunst-project/dunst
    - *git-pre
    - make WAYLAND=0
    - sudo make WAYLAND=0 install
    - *git-post
mega:
  dep: [root]
  cmd:
    - |-
      upstream=$(awk -F= '$1 == "DISTRIB_RELEASE" {print $2}' /etc/upstream-release/lsb-release)
      wget -qO/dev/null mega.nz/linux/MEGAsync/xUbuntu_$upstream
      sudo sed -Ei "s/[0-9]{2}\.[0-9]{2}/$upstream/" /etc/apt/sources.list.d/megasync.list
      sudo apt-get update
      pkg=megasync
    - *agi
chrome:
  dep: [root]
  cmd:
    - pkg=google-chrome-stable
    - *agi
bitwarden:
  dep: [base]
  cmd: |-
    wget -O ~/.local/bin/bitwarden 'https://vault.bitwarden.com/download/?app=desktop&platform=linux'
    wget -O bw.zip 'https://vault.bitwarden.com/download/?app=cli&platform=linux'
    unzip -d ~/.local/bin bw.zip
    chmod +x ~/.local/bin/bw ~/.local/bin/bitwarden
    rm bw.zip
dropbox:
 dep: [tq, base]
 cmd: |-
   latest=$(wget -O- linux.dropbox.com/packages/ubuntu 2>/dev/null |
     tq 'a[href$="amd64.deb"]' -a href | tail -n1)
   wget -O dropbox.deb linux.dropbox.com/packages/ubuntu/$latest
   sudo apt-get install -qy ./dropbox.deb
   echo y | dropbox start -i &
   rm dropbox.deb
## End graphical deps
tub: 
  dep: [tq, base]
  cmd:
    - pkg='krb5-user openconnect'
    - *agi
    - |-
      url=updates.tubcloud.tu-berlin.de/
      latest=$(wget -O- $url | tq '.pricing-table-linux a' -a href)
      wget -O ~/.local/bin/tubCloud $url$latest
      chmod +x ~/.local/bin/tubCloud
tq:
  cmd: |-
    sudo pip3 install https://github.com/plainas/tq/zipball/stable
systemd-units:
  cmd: systemctl --user enable ~/.config/systemd/user/*
## End default deps
